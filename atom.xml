<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>郭鑫的个人博客</title>
  
  <subtitle>热爱技术 | 热爱生活</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://bigbilii.github.io/"/>
  <updated>2018-12-16T07:30:35.807Z</updated>
  <id>https://bigbilii.github.io/</id>
  
  <author>
    <name>Guo Xin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Maven入门</title>
    <link href="https://bigbilii.github.io/2018/12/16/Maven%E5%85%A5%E9%97%A8/"/>
    <id>https://bigbilii.github.io/2018/12/16/Maven入门/</id>
    <published>2018-12-16T06:44:31.000Z</published>
    <updated>2018-12-16T07:30:35.807Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h2><p>Maven是基于项目对象模型（POM），可以通过一小段描述信息来管理项目的构建、报告和文档的软件项目管理工具。</p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>本次将在windows环境下搭建maven环境。</p><p><strong>注意：环境中需要配置JDK</strong></p><h3 id="下载Maven"><a href="#下载Maven" class="headerlink" title="下载Maven"></a>下载Maven</h3><p>访问<a href="http://maven.apache.org/" target="_blank" rel="noopener">Maven官网</a>,下载你所需要的版本，一般情况下，下载已编译的版本，然后解压到相应的安装目录下。</p><p>目录结构介绍：</p><ul><li>bin：包含mvn的运行脚本</li><li>boot：一个类加载器的框架</li><li>conf：配置文件目录</li><li>lib：mvn平时所用的类库</li></ul><h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><p>下载解压安装好之后，需要进行环境变量的配置，以便在任何路径下都能执行mvn的相应运行脚本。</p><p>打开环境变量，编辑系统变量（如果此电脑由多用户使用，则编辑用户变量）</p><p>新建，变量名M2_HOME，变量值为maven的安装目录，确定。</p><p>编辑Path，增加<code>%M2_HOME%\bin;</code>，确定。</p><p>配置成功，打开命令行，输入<code>mvn -v</code>可以查看到maven的版本，Java信息和系统信息。</p><p><em>打开环境变量步骤：电脑邮件-属性-高级系统设置-环境变量。</em><br><em>安装目录下最好不要有中文路径，以避免不必要的问题。</em></p><h2 id="Maven目录结构"><a href="#Maven目录结构" class="headerlink" title="Maven目录结构"></a>Maven目录结构</h2><p>良好的目录结构，有助于开发人员理解项目，也能更好的维护项目。</p><p>一般的Maven项目目录结构</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">|--pom.xml //项目对象模型配置文件</span><br><span class="line">|--src</span><br><span class="line">    |--main</span><br><span class="line">        |--java //源代码</span><br><span class="line">            `package</span><br><span class="line">        |--resources //资源文件</span><br><span class="line">    |--test</span><br><span class="line">        |--java //测试代码</span><br><span class="line">            `package</span><br><span class="line">        |--resources //测试资源文件</span><br></pre></td></tr></table></figure><h2 id="Maven常用命令"><a href="#Maven常用命令" class="headerlink" title="Maven常用命令"></a>Maven常用命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mvn -v      //查看maven版本</span><br><span class="line">mvm compile //编译</span><br><span class="line">mvn test    //测试</span><br><span class="line">mvn package //打包</span><br><span class="line">mvn clean   //删除target</span><br><span class="line">mvn install //安装jar包到本地仓库</span><br></pre></td></tr></table></figure><p>创建目录的两种方式</p><ul><li>arhetype:gennerate //按照提示进行选择</li><li>arhetype:gennerate <pre><code>-DgroupId=组织名，公司网址反写-DartifactId=项目名-模块名-Dversion=版本号-Dversion=版本号-Dpackage=代码存在的包名</code></pre></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Maven&quot;&gt;&lt;a href=&quot;#Maven&quot; class=&quot;headerlink&quot; title=&quot;Maven&quot;&gt;&lt;/a&gt;Maven&lt;/h2&gt;&lt;p&gt;Maven是基于项目对象模型（POM），可以通过一小段描述信息来管理项目的构建、报告和文档的软件项目管理工具。&lt;/p
      
    
    </summary>
    
      <category term="Maven" scheme="https://bigbilii.github.io/categories/Maven/"/>
    
    
      <category term="Maven" scheme="https://bigbilii.github.io/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>Hexo主题NexT配置</title>
    <link href="https://bigbilii.github.io/2018/12/10/Hexo%E4%B8%BB%E9%A2%98NexT%E9%85%8D%E7%BD%AE/"/>
    <id>https://bigbilii.github.io/2018/12/10/Hexo主题NexT配置/</id>
    <published>2018-12-10T12:37:09.000Z</published>
    <updated>2018-12-10T14:06:45.986Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://bigbilii.github.io/2018/12/05/Hexo-Github%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/">上篇博客</a>配置了Hexo，今天这篇文章，将介绍Hexo配置NexT主题的配置。</p><h2 id="NexT主题下载与启动"><a href="#NexT主题下载与启动" class="headerlink" title="NexT主题下载与启动"></a>NexT主题下载与启动</h2><p>使用git，克隆最新版本，下载到<code>/themes</code>目录下。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd username.github.io</span><br><span class="line">$ git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>下载好之后，打开站点配置文件(/_config.yml),找到<code>theme</code>字段，将值改为next。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure><p>重新启动hexo站点，即可看到主题改变。</p><p><em>注：配置其他主题也是一样的步骤</em></p><p><em>注：如果没有看到主题改变，清理下缓存，使用hexo clean命令，再重试</em></p><h2 id="配置站点配置文件"><a href="#配置站点配置文件" class="headerlink" title="配置站点配置文件"></a>配置站点配置文件</h2><p>站点配置文件在根目录下的<code>_congif.yml</code></p><h3 id="站点信息设置"><a href="#站点信息设置" class="headerlink" title="站点信息设置"></a>站点信息设置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">title: #站点名称</span><br><span class="line">subtitle: #副标题</span><br><span class="line">description: #站点描述</span><br><span class="line">author: #昵称</span><br><span class="line">language: #语言设置</span><br></pre></td></tr></table></figure><p>注意：NexT主题中，language配置有相应的配置信息。</p><blockquote><table><thead><tr><th>语言</th><th style="text-align:right">代码</th><th style="text-align:center">设定示例</th></tr></thead><tbody><tr><td>English</td><td style="text-align:right">en</td><td style="text-align:center">language: en</td></tr><tr><td>简体中文</td><td style="text-align:right">zh-Hans</td><td style="text-align:center">language: zh-Hans</td></tr><tr><td>Français</td><td style="text-align:right">fr-FR</td><td style="text-align:center">language: fr-FR</td></tr><tr><td>Português</td><td style="text-align:right">pt</td><td style="text-align:center">language: pt or language: pt-BR</td></tr><tr><td>繁體中文</td><td style="text-align:right">zh-hk 或者 zh-tw</td><td style="text-align:center">language: zh-hk</td></tr><tr><td>Русский</td><td style="text-align:right">язык    ru</td><td style="text-align:center">language: ru</td></tr><tr><td>Deutsch</td><td style="text-align:right">de</td><td style="text-align:center">language: de</td></tr><tr><td>日本語</td><td style="text-align:right">ja</td><td style="text-align:center">language: ja</td></tr><tr><td>Indonesian</td><td style="text-align:right">id</td><td style="text-align:center">language: id</td></tr><tr><td>Korean</td><td style="text-align:right">ko</td><td style="text-align:center">language: ko</td></tr></tbody></table></blockquote><h2 id="配置主题配置文件"><a href="#配置主题配置文件" class="headerlink" title="配置主题配置文件"></a>配置主题配置文件</h2><p>主题配置文件在主题目录下的<code>/themes/next/_congif.yml</code></p><h3 id="选择Scheme"><a href="#选择Scheme" class="headerlink" title="选择Scheme"></a>选择Scheme</h3><p>Scheme是NexT提供的一种特性，借助于Scheme，NexT为你提供多种不同的外观。</p><p>取消想要使用的效果前面的<code>#</code>注释，即可开启，，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Scheme Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Schemes</span><br><span class="line"># scheme: Muse</span><br><span class="line"># scheme: Mist</span><br><span class="line"># scheme: Pisces</span><br><span class="line">scheme: Gemini</span><br></pre></td></tr></table></figure></p><h3 id="设置菜单"><a href="#设置菜单" class="headerlink" title="设置菜单"></a>设置菜单</h3><p>通过配置menu标签，来设置网址的菜单选项。</p><p>用法：key: link || icon</p><p>key为菜单项名称，如果在配置的language中翻译项能找到对应翻译，则使用翻译，如果不能找到，则使用key。</p><p>link为菜单的链接。</p><p>icon为FontAwesome图标的名称，如果不配置，则默认使用问题图标。</p><p>menu_icons配置是否使用icon。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Menu Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">menu:</span><br><span class="line">  home: / || home</span><br><span class="line">  about: /about/ || user</span><br><span class="line">  tags: /tags/ || tags</span><br><span class="line">  categories: /categories/ || th</span><br><span class="line">  archives: /archives/ || archive</span><br><span class="line">  #schedule: /schedule/ || calendar</span><br><span class="line">  #sitemap: /sitemap.xml || sitemap</span><br><span class="line">  #commonweal: /404/ || heartbeat</span><br><span class="line"></span><br><span class="line"># Enable/Disable menu icons.</span><br><span class="line">menu_icons:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure></p><p><em>注：如果站点在子目录下运行，则link的最前面的/删除。</em></p><p><em>注：默认菜单项为上面列出的，只有home和archives不需要手动创建，其他均需要手动创建。</em></p><h3 id="设置头像"><a href="#设置头像" class="headerlink" title="设置头像"></a>设置头像</h3><p>修改<code>avatar</code>字段，值为头像链接，链接可以为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Sidebar Avatar</span><br><span class="line"> http://example.com/avatar.png</span><br></pre></td></tr></table></figure></p><blockquote><table><thead><tr><th>地址</th><th>值</th></tr></thead><tbody><tr><td>完整的互联网 URI</td><td><a href="http://example.com/avatar.png" target="_blank" rel="noopener">http://example.com/avatar.png</a></td></tr><tr><td>站点内的地址</td><td>将头像放置主题目录下的 source/uploads/ （新建 uploads 目录若不存在） 配置为：avatar: /uploads/avatar.png 或者 放置在 source/images/ 目录下 配置为：avatar: /images/avatar.png</td></tr></tbody></table></blockquote><h3 id="站点建立时间"><a href="#站点建立时间" class="headerlink" title="站点建立时间"></a>站点建立时间</h3><p>这个时间将在站点的底部显示，例如 ©2018。 编辑主题配置文件，新增字段since。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">since: 2018</span><br></pre></td></tr></table></figure><h2 id="Valine评论"><a href="#Valine评论" class="headerlink" title="Valine评论"></a>Valine评论</h2><h3 id="配置leancloud"><a href="#配置leancloud" class="headerlink" title="配置leancloud"></a>配置leancloud</h3><p>Valine需要运行在leancloud上，所以需要<a href="https://leancloud.cn/" target="_blank" rel="noopener">注册</a>其账号，创建一个应用（名字随意），进入应用，设置，应用Key，找到App ID和App Key。</p><h3 id="配置NexT主题配置文件"><a href="#配置NexT主题配置文件" class="headerlink" title="配置NexT主题配置文件"></a>配置NexT主题配置文件</h3><p>打开主题配置文件（/themes/_config.yml），找到Valine标签（没有可自行添加），配置如下。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">valine:</span><br><span class="line">  enable: true</span><br><span class="line">  appid: #上面的appid</span><br><span class="line">  appkey:  #上面的appkey</span><br><span class="line">  notify: false # mail notifier , https://github.com/xCss/Valine/wiki</span><br><span class="line">  verify: false # Verification code</span><br><span class="line">  placeholder: 欢迎评论 # comment box placeholder</span><br><span class="line">  avatar: mm # gravatar style</span><br><span class="line">  guest_info: nick,mail # custom comment header</span><br><span class="line">  pageSize: 10 # pagination size</span><br></pre></td></tr></table></figure></p><h2 id="阅读次数统计（LeanCloud"><a href="#阅读次数统计（LeanCloud" class="headerlink" title="阅读次数统计（LeanCloud)"></a>阅读次数统计（LeanCloud)</h2><h3 id="配置leancloud-1"><a href="#配置leancloud-1" class="headerlink" title="配置leancloud"></a>配置leancloud</h3><p>在配置Valine评论系统的时候，已经拥有了leancloud账号，如果没有，则可以跳转上去查看。</p><p>创建应用(名字随意）点击左侧右上角的齿轮图标，新建Class：<strong>此处的新建Class名字必须为Counter。</strong></p><blockquote><p>由于LeanCloud升级了默认的ACL权限，如果你想避免后续因为权限的问题导致次数统计显示不正常，建议在此处选择无限制。</p></blockquote><p>与valine上述一样，获取该应用的App ID和App Key。</p><h3 id="配置NexT主题配置文件-1"><a href="#配置NexT主题配置文件-1" class="headerlink" title="配置NexT主题配置文件"></a>配置NexT主题配置文件</h3><p>打开主题配置文件（/themes/next/_config.yml），找到leancloud_visitors标签（没有可自行添加），配置如下。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">leancloud_visitors:</span><br><span class="line">  enable: true</span><br><span class="line">  app_id: #上面的appid</span><br><span class="line">  app_key: #上面的appkey</span><br></pre></td></tr></table></figure></p><h2 id="Local-Search"><a href="#Local-Search" class="headerlink" title="Local Search"></a>Local Search</h2><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><p>安装 hexo-generator-searchdb，在站点的根目录下执行以下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure></p><h3 id="配置站点信息"><a href="#配置站点信息" class="headerlink" title="配置站点信息"></a>配置站点信息</h3><p>在<code>/config.yml</code>中添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure></p><h3 id="配置主题信息"><a href="#配置主题信息" class="headerlink" title="配置主题信息"></a>配置主题信息</h3><p>在<code>/themes/next/config.yml</code>中,启动本地搜索<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Local search</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://theme-next.iissnan.com/" target="_blank" rel="noopener">NexT官方文档</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://bigbilii.github.io/2018/12/05/Hexo-Github%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/&quot;&gt;上篇博客&lt;/a&gt;配置了Hexo，今天这篇文章，将介绍Hexo配置NexT主题的配
      
    
    </summary>
    
      <category term="博客" scheme="https://bigbilii.github.io/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="hexo" scheme="https://bigbilii.github.io/tags/hexo/"/>
    
      <category term="NexT" scheme="https://bigbilii.github.io/tags/NexT/"/>
    
      <category term="博客" scheme="https://bigbilii.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Github博客搭建</title>
    <link href="https://bigbilii.github.io/2018/12/05/Hexo-Github%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    <id>https://bigbilii.github.io/2018/12/05/Hexo-Github博客搭建/</id>
    <published>2018-12-05T08:22:31.000Z</published>
    <updated>2018-12-05T09:07:01.984Z</updated>
    
    <content type="html"><![CDATA[<p>hexo是快速、简洁且高效的博客框架，本文章介绍如何利用hexo+github搭建出一个静态博客网站。</p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><h3 id="node-js"><a href="#node-js" class="headerlink" title="node.js"></a>node.js</h3><p>在<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">官网</a>下载你相应环境的node.js，根据提示进行安装。</p><p>检验安装完成：</p><p><code>$ node -v</code></p><h3 id="git"><a href="#git" class="headerlink" title="git"></a>git</h3><p>在<a href="https://gitforwindows.org/" target="_blank" rel="noopener">官网</a>下载相应环境的git，根据提示安装。</p><p>安装成功后，配置相应的账号和邮箱。（这里需要github账号）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;username&quot;</span><br><span class="line">$ git config --global user.email username@gmail.com</span><br></pre></td></tr></table></figure><h3 id="hexo"><a href="#hexo" class="headerlink" title="hexo"></a>hexo</h3><p>安装node.js之后，根据<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">官网</a>的提示，安装hexo。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br></pre></td></tr></table></figure><h2 id="搭建本地博客"><a href="#搭建本地博客" class="headerlink" title="搭建本地博客"></a>搭建本地博客</h2><h3 id="创建博客目录"><a href="#创建博客目录" class="headerlink" title="创建博客目录"></a>创建博客目录</h3><p>上面三个环境搭建好之后，在本地的终端中，进入某个路径，在该路径下建立博客目录。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init username.github.io</span><br><span class="line">$ cd username.github.io</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure></p><h3 id="生成静态页面并运行"><a href="#生成静态页面并运行" class="headerlink" title="生成静态页面并运行"></a>生成静态页面并运行</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><blockquote><p>g 即generate<br>s 即server</p></blockquote><p>在浏览器中，输入地址 <strong>localhost:4000</strong> 即可看到效果。</p><p>这样一个本地的hexo博客系统以及搭建好了。</p><h2 id="部署到Github"><a href="#部署到Github" class="headerlink" title="部署到Github"></a>部署到Github</h2><h3 id="创建一个username-github-io的public仓库"><a href="#创建一个username-github-io的public仓库" class="headerlink" title="创建一个username.github.io的public仓库"></a>创建一个username.github.io的public仓库</h3><p>创建一个仓库，根据你的github的username来创建一个public的仓库，仓库名为<strong>username.github.io</strong></p><h3 id="安装-hexo-deployer-git"><a href="#安装-hexo-deployer-git" class="headerlink" title="安装 hexo-deployer-git"></a>安装 <a href="https://github.com/hexojs/hexo-deployer-git" target="_blank" rel="noopener">hexo-deployer-git</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h3 id="配置git"><a href="#配置git" class="headerlink" title="配置git"></a>配置git</h3><p>在本地<strong>站点配置文件的</strong>：<strong>_config.yml </strong>文件中配置deploy<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: &lt;repository url&gt;</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></p><h3 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><p>这样就能在username.github.com中看到你的博客系统了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;hexo是快速、简洁且高效的博客框架，本文章介绍如何利用hexo+github搭建出一个静态博客网站。&lt;/p&gt;
&lt;h2 id=&quot;环境搭建&quot;&gt;&lt;a href=&quot;#环境搭建&quot; class=&quot;headerlink&quot; title=&quot;环境搭建&quot;&gt;&lt;/a&gt;环境搭建&lt;/h2&gt;&lt;h3 id
      
    
    </summary>
    
      <category term="博客" scheme="https://bigbilii.github.io/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="hexo" scheme="https://bigbilii.github.io/tags/hexo/"/>
    
      <category term="博客" scheme="https://bigbilii.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="Github" scheme="https://bigbilii.github.io/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>起于年末的片头</title>
    <link href="https://bigbilii.github.io/2018/12/04/%E8%B5%B7%E4%BA%8E%E5%B9%B4%E6%9C%AB%E7%9A%84%E7%89%87%E5%A4%B4/"/>
    <id>https://bigbilii.github.io/2018/12/04/起于年末的片头/</id>
    <published>2018-12-04T14:40:01.000Z</published>
    <updated>2018-12-04T14:40:37.560Z</updated>
    
    <content type="html"><![CDATA[<p>今日，2018年12月4日，是2018年的结束，是我的开始。</p><h2 id="回顾"><a href="#回顾" class="headerlink" title="回顾"></a>回顾</h2><p>我，今年23岁，现目前就读于重庆理工大学，计算机科学与技术专业，大四上半学期。在今年暑假加入某gis公司实习，秋招的时候，顺利收到猪八戒网的Java开发offer。</p><p>在过去的很多年内，有很多想法，做过动漫视频剪辑，做过博客，跑步，摄影，看书。但几乎都是做了头两次，但没有坚持，原因就是，当把这些所谓的兴趣和想法，以质量的形式来衡量，就失去了做下去的动力。也就是说，当我想把某件事做好，那么需要很多精力和时间去做这件事，这件事就不再使我快乐，成为了我的负担，也就作罢。</p><p>当现目前我有了足够多的时间，距离明年工作报道还有半年多的时间，这使我重拾了以前的兴趣之一，博客。</p><h2 id="现状"><a href="#现状" class="headerlink" title="现状"></a>现状</h2><p>现目前的我，是一名计算机专业的学生，和其他程序员一样，热爱着技术和科技。</p><p>目前是一名Java开发者，手头也有一些Java相关的技术书籍，掌握了Java基础，Web开发和Spring等相关框架的使用，在实习的时候也学习了Mongodb、Elasticsearch等的使用，在学校也学习了前端，C语言，算法，Andorid，计算机系统，单片机，计算机网络等课程，取得了软件设计师（软考中级），OCJP认证。</p><h2 id="规划"><a href="#规划" class="headerlink" title="规划"></a>规划</h2><p>时间，是我现在所富裕的。所以我得好好计划下接下来的时间安排。</p><p>在接下来的时间，我有几个计划</p><ol><li>坚持学习技术，记笔记，更新博客</li><li>每周跑步两次，锻炼身体，保护头发</li><li>坚持看书（非技术类），增长知识，方便吹b</li><li>在明年年后，租到适合的房子</li></ol><p>不过，现目前还在大学，还有最后的毕业设计要做，等待开题中，等完成了就彻底轻松了，可以出去旅游旅游。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今日，2018年12月4日，是2018年的结束，是我的开始。&lt;/p&gt;
&lt;h2 id=&quot;回顾&quot;&gt;&lt;a href=&quot;#回顾&quot; class=&quot;headerlink&quot; title=&quot;回顾&quot;&gt;&lt;/a&gt;回顾&lt;/h2&gt;&lt;p&gt;我，今年23岁，现目前就读于重庆理工大学，计算机科学与技术专业，
      
    
    </summary>
    
      <category term="随笔" scheme="https://bigbilii.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="生活" scheme="https://bigbilii.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="随笔" scheme="https://bigbilii.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
</feed>
